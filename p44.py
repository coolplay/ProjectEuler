"""
Project Euler Problem 44
========================

Pentagonal numbers are generated by the formula, P[n]=n(3n-1)/2. The first
ten pentagonal numbers are:

               1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their
difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P[j] and P[k], for which their sum
and difference is pentagonal and D = |P[k] - P[j]| is minimised; what is
the value of D?
"""
import bisect
import math
# XXX
np = 2500
p = [n*(3*n-1)//2 for n in xrange(np+1)]


# Modified from Python docs for bisect
def index(a, x):
    'Locate the leftmost value exactly equal to x'
    i = bisect.bisect_left(a, x)
    if i != len(a) and a[i] == x:
        return i
    return False


def solution(values):
    for value in values:
        yield (1.+math.sqrt(1+24*value)) / 6.


def is_pentagonal_pair(j, k):
    pj, pk = p[j], p[k]
    # 1. binary search. Wall time: 9.13 s.
    # return all(index(p, i) for i in (pk+pj, pk-pj))
    # 2. search. Wall time: 66.02 s.
    # return pk+pj in p[k:] and pk-pj in p[1:k]
    # 3. solution. Wall time: 10.68 s.
    return all(i == int(i) for i in solution((pk+pj, pk-pj)))


def main():
    return min(p[k]-p[j]
               for j in xrange(1, np)
               for k in xrange(j+1, np+1)
               if is_pentagonal_pair(j, k)
               )

if __name__ == '__main__':
    print main()
